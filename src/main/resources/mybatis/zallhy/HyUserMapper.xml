<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.zallhy.dao.HyUserDao">

	<select id="get" resultType="com.bootdo.zallhy.domain.HyUserDO">
		select `user_id`,`user_name`,`status` from hy_user where user_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.zallhy.domain.HyUserDO">
		select `user_id`,`user_name`,`status` from hy_user
        <where>  
		  		  <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
		  		  <if test="userName != null and userName != ''"> and user_name = #{userName} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by user_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from hy_user
		 <where>  
		  		  <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
		  		  <if test="userName != null and userName != ''"> and user_name = #{userName} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.zallhy.domain.HyUserDO">
		insert into hy_user
		(
			`user_id`, 
			`user_name`, 
			`status`
		)
		values
		(
			#{userId}, 
			#{userName}, 
			#{status}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.zallhy.domain.HyUserDO">
		update hy_user 
		<set>
			<if test="userName != null">`user_name` = #{userName}, </if>
			<if test="status != null">`status` = #{status}</if>
		</set>
		where user_id = #{userId}
	</update>
	
	<delete id="remove">
		delete from hy_user where user_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from hy_user where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>

</mapper>